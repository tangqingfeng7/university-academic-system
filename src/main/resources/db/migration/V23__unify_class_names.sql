-- ============================================================================
-- 统一班级名称数据迁移脚本
-- Version: V23
-- Description: 将学生表中的班级名称统一为规范格式
-- Author: Academic System Team
-- Date: 2025-01-13
-- ============================================================================

USE academic_system;

-- 临时变量，用于统计
SET @row_number = 0;
SET @current_major = NULL;
SET @current_year = NULL;

-- 为主要专业创建标准班级
-- 先删除可能存在的重复班级（保留我们已创建的）
-- 不删除，只添加新的

-- 创建更多班级（为人数较多的专业）
INSERT IGNORE INTO class (class_code, class_name, major_id, enrollment_year, capacity, deleted, created_at, updated_at) VALUES
-- 人工智能专业 (major_id=12)
('2024AI01', '人工智能2024级1班', 12, 2024, 40, 0, NOW(), NOW()),
('2023AI01', '人工智能2023级1班', 12, 2023, 40, 0, NOW(), NOW()),
('2022AI01', '人工智能2022级1班', 12, 2022, 40, 0, NOW(), NOW()),
('2021AI01', '人工智能2021级1班', 12, 2021, 40, 0, NOW(), NOW()),

-- 物理学专业 (major_id=15)
('2024PHY01', '物理学2024级1班', 15, 2024, 40, 0, NOW(), NOW()),
('2023PHY01', '物理学2023级1班', 15, 2023, 40, 0, NOW(), NOW()),
('2022PHY01', '物理学2022级1班', 15, 2022, 40, 0, NOW(), NOW()),
('2021PHY01', '物理学2021级1班', 15, 2021, 40, 0, NOW(), NOW()),

-- 化学专业 (major_id=17)
('2024CHEM01', '化学2024级1班', 17, 2024, 40, 0, NOW(), NOW()),
('2023CHEM01', '化学2023级1班', 17, 2023, 40, 0, NOW(), NOW()),
('2022CHEM01', '化学2022级1班', 17, 2022, 40, 0, NOW(), NOW()),
('2021CHEM01', '化学2021级1班', 17, 2021, 40, 0, NOW(), NOW()),

-- 化学工程与工艺专业 (major_id=18)
('2024CHE01', '化学工程与工艺2024级1班', 18, 2024, 40, 0, NOW(), NOW()),
('2023CHE01', '化学工程与工艺2023级1班', 18, 2023, 40, 0, NOW(), NOW()),
('2022CHE01', '化学工程与工艺2022级1班', 18, 2022, 40, 0, NOW(), NOW()),
('2021CHE01', '化学工程与工艺2021级1班', 18, 2021, 40, 0, NOW(), NOW()),

-- 统计学专业 (major_id=14)
('2024STAT01', '统计学2024级1班', 14, 2024, 40, 0, NOW(), NOW()),
('2023STAT01', '统计学2023级1班', 14, 2023, 40, 0, NOW(), NOW()),
('2022STAT01', '统计学2022级1班', 14, 2022, 40, 0, NOW(), NOW()),
('2021STAT01', '统计学2021级1班', 14, 2021, 40, 0, NOW(), NOW()),

-- 电子信息工程专业 (major_id=16)
('2024EE01', '电子信息工程2024级1班', 16, 2024, 40, 0, NOW(), NOW()),
('2023EE01', '电子信息工程2023级1班', 16, 2023, 40, 0, NOW(), NOW()),
('2022EE01', '电子信息工程2022级1班', 16, 2022, 40, 0, NOW(), NOW()),
('2021EE01', '电子信息工程2021级1班', 16, 2021, 40, 0, NOW(), NOW()),

-- 经济学专业 (major_id=21)
('2024ECON01', '经济学2024级1班', 21, 2024, 40, 0, NOW(), NOW()),
('2023ECON01', '经济学2023级1班', 21, 2023, 40, 0, NOW(), NOW()),
('2022ECON01', '经济学2022级1班', 21, 2022, 40, 0, NOW(), NOW()),
('2021ECON01', '经济学2021级1班', 21, 2021, 40, 0, NOW(), NOW()),

-- 数学与应用数学专业 (major_id=13)
('2024MATH01', '数学与应用数学2024级1班', 13, 2024, 40, 0, NOW(), NOW()),
('2023MATH01', '数学与应用数学2023级1班', 13, 2023, 40, 0, NOW(), NOW()),
('2022MATH01', '数学与应用数学2022级1班', 13, 2022, 40, 0, NOW(), NOW()),
('2021MATH01', '数学与应用数学2021级1班', 13, 2021, 40, 0, NOW(), NOW()),

-- 生物科学专业 (major_id=19)
('2024BIO01', '生物科学2024级1班', 19, 2024, 40, 0, NOW(), NOW()),
('2023BIO01', '生物科学2023级1班', 19, 2023, 40, 0, NOW(), NOW()),
('2022BIO01', '生物科学2022级1班', 19, 2022, 40, 0, NOW(), NOW()),

-- 生物技术专业 (major_id=20)
('2024BT01', '生物技术2024级1班', 20, 2024, 40, 0, NOW(), NOW()),
('2023BT01', '生物技术2023级1班', 20, 2023, 40, 0, NOW(), NOW()),

-- 其他专业（2024级）
('2024FIN01', '金融学2024级1班', 22, 2024, 40, 0, NOW(), NOW()),
('2024LAW01', '法学2024级1班', 23, 2024, 40, 0, NOW(), NOW()),
('2024LIT01', '汉语言文学2024级1班', 24, 2024, 40, 0, NOW(), NOW()),
('2024ENG01', '英语2024级1班', 25, 2024, 40, 0, NOW(), NOW()),
('2024ART01', '美术学2024级1班', 26, 2024, 40, 0, NOW(), NOW()),
('2024MUS01', '音乐学2024级1班', 27, 2024, 40, 0, NOW(), NOW()),
('2024MED01', '临床医学2024级1班', 28, 2024, 40, 0, NOW(), NOW()),
('2024NUR01', '护理学2024级1班', 29, 2024, 40, 0, NOW(), NOW());

-- 更新学生的班级名称为规范格式
-- 使用CONCAT函数生成规范的班级名称：{专业名称}{入学年份}级1班

UPDATE student s
JOIN major m ON s.major_id = m.id
JOIN class c ON c.major_id = s.major_id AND c.enrollment_year = s.enrollment_year
SET s.class_name = c.class_name
WHERE s.deleted = 0;

-- 验证更新结果
SELECT 
    '更新完成' as status,
    COUNT(*) as updated_count,
    COUNT(DISTINCT class_name) as unique_classes
FROM student 
WHERE deleted = 0;

-- 显示班级分布
SELECT 
    class_name,
    COUNT(*) as student_count
FROM student 
WHERE deleted = 0
GROUP BY class_name
ORDER BY class_name;

COMMIT;

